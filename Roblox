local Rayfield = loadstring(game:HttpGet('https://sirius.menu/rayfield'))()

local Window = Rayfield:CreateWindow({
    Name = "Duckian",
    Icon = 0, -- Icon in Topbar. Can use Lucide Icons (string) or Roblox Image (number). 0 to use no icon (default).
    LoadingTitle = "Wait a minute, the script is loading",
    LoadingSubtitle = "by DucMagic$",
    Theme = "Amethyst", -- Check https://docs.sirius.menu/rayfield/configuration/themes
 
    DisableRayfieldPrompts = false,
    DisableBuildWarnings = false, -- Prevents Rayfield from warning when the script has a version mismatch with the interface
 
    ConfigurationSaving = {
       Enabled = true,
       FolderName = Duckian, -- Create a custom folder for your hub/game
       FileName = "Duckian Hub"
    },
 
    Discord = {
       Enabled = true, -- Prompt the user to join your Discord server if their executor supports it
       Invite = "PnHj485p", -- The Discord invite code, do not include discord.gg/. E.g. discord.gg/ ABCD would be ABCD
       RememberJoins = false -- Set this to false to make them join the discord every time they load it up
    },
 
    KeySystem = true, -- Set this to true to use our key system
    KeySettings = {
       Title = "Go Ask Him",
       Subtitle = "Key System",
       Note = "Get Key", -- Use this to tell the user how to get a key
       FileName = "Key", -- It is recommended to use something unique as other scripts using Rayfield may overwrite your key file
       SaveKey = true, -- The user's key will be saved, but if you change the key, they will be unable to use your script
       GrabKeyFromSite = false, -- If this is true, set Key below to the RAW site you would like Rayfield to get the key from
       Key = {"ducmagic"} -- List of keys that will be accepted by the system, can be RAW file links (pastebin, github etc) or simple strings ("hello","key22")
    }
 })

Rayfield:Notify({
   Title = "XIN THÔNG BÁO",
   Content = "PHIÊN BẢN FREE",
   Duration = 6,
   Image = "rewind",
})

local Tab = Window:CreateTab("Main", 4483362458) -- Title, Image
local PlayerTab = Window:CreateTab("Player", 4483362458) -- Title, Image
local Tab = Window:CreateTab("Credit", 4483362458)

local Button = Tab:CreateButton({
   Name = "Click To See What Happen:)",
   Callback = function()
       local player = game.Players.LocalPlayer
       if player and player.Character then
           player.Character:BreakJoints() -- Reset nhân vật
       end
   end,
})

local Paragraph = Tab:CreateParagraph({Title = "Make By Ducmagic$$$", Content = "Thanks For Using!"})

-- WalkSpeed Toggle + Slider
local WalkEnabled = false
local DefaultWalkSpeed = 16
local WalkSpeedValue = DefaultWalkSpeed

PlayerTab:CreateToggle({
    Name = "Chạy Nhanh",
    CurrentValue = false,
    Callback = function(Value)
        WalkEnabled = Value
        local humanoid = game.Players.LocalPlayer.Character:FindFirstChildOfClass("Humanoid")
        if humanoid then
            humanoid.WalkSpeed = Value and WalkSpeedValue or DefaultWalkSpeed
        end
    end,
})

PlayerTab:CreateSlider({
    Name = "WalkSpeed",
    Range = {16, 200},
    Increment = 1,
    Suffix = "Speed",
    CurrentValue = DefaultWalkSpeed,
    Callback = function(Value)
        WalkSpeedValue = Value
        if WalkEnabled then
            local humanoid = game.Players.LocalPlayer.Character:FindFirstChildOfClass("Humanoid")
            if humanoid then
                humanoid.WalkSpeed = Value
            end
        end
    end,
})

-- JumpPower Toggle + Slider
local JumpEnabled = false
local DefaultJumpPower = 50
local JumpPowerValue = DefaultJumpPower

PlayerTab:CreateToggle({
    Name = "Sức Mạnh Nhảy",
    CurrentValue = false,
    Callback = function(Value)
        JumpEnabled = Value
        local humanoid = game.Players.LocalPlayer.Character:FindFirstChildOfClass("Humanoid")
        if humanoid then
            humanoid.JumpPower = Value and JumpPowerValue or DefaultJumpPower
        end
    end,
})

PlayerTab:CreateSlider({
    Name = "JumpPower",
    Range = {50, 500},
    Increment = 1,
    Suffix = "Power",
    CurrentValue = DefaultJumpPower,
    Callback = function(Value)
        JumpPowerValue = Value
        if JumpEnabled then
            local humanoid = game.Players.LocalPlayer.Character:FindFirstChildOfClass("Humanoid")
            if humanoid then
                humanoid.JumpPower = Value
            end
        end
    end,
})

local flingEnabled = false
local flingForce = 150 -- Điều chỉnh lực vừa đủ để văng
local connection

local function startFling()
    local HRP = game.Players.LocalPlayer.Character:WaitForChild("HumanoidRootPart")
    flingEnabled = true

    connection = HRP.Touched:Connect(function(hit)
        if not flingEnabled then return end
        local char = hit:FindFirstAncestorOfClass("Model")
        if char and char:FindFirstChild("Humanoid") and char ~= game.Players.LocalPlayer.Character then
            local hrp = char:FindFirstChild("HumanoidRootPart")
            if hrp then
                local direction = (hrp.Position - HRP.Position).Unit
                hrp.Velocity = direction * flingForce + Vector3.new(0, 30, 0) -- Đẩy kèm chút lên cao
            end
        end
    end)
end

local function stopFling()
    flingEnabled = false
    if connection then
        connection:Disconnect()
        connection = nil
    end
end

-- Thêm vào nút toggle
PlayerTab:CreateToggle({
    Name = "Fling Player",
    CurrentValue = false,
    Callback = function(Value)
        if Value then
            startFling()
        else
            stopFling()
        end
    end,
})

local AntiFlingEnabled = false
local AntiFlingConnection

PlayerTab:CreateToggle({
    Name = "Anti Fling",
    CurrentValue = false,
    Flag = "AntiFlingToggle",
    Callback = function(Value)
        AntiFlingEnabled = Value

        if AntiFlingEnabled then
            AntiFlingConnection = game:GetService("RunService").Heartbeat:Connect(function()
                for _, player in pairs(game:GetService("Players"):GetPlayers()) do
                    if player ~= game.Players.LocalPlayer and player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
                        local hrp = player.Character.HumanoidRootPart
                        for _, child in pairs(hrp:GetChildren()) do
                            if child:IsA("BodyVelocity") or child:IsA("BodyAngularVelocity") then
                                child:Destroy()
                            end
                        end
                    end
                end

                local char = game.Players.LocalPlayer.Character
                if char and char:FindFirstChild("HumanoidRootPart") then
                    local hrp = char.HumanoidRootPart
                    if hrp.Velocity.Magnitude > 100 then
                        hrp.Velocity = Vector3.zero
                    end
                end
            end)
        else
            if AntiFlingConnection then
                AntiFlingConnection:Disconnect()
                AntiFlingConnection = nil
            end
        end
    end,
})

-- Auto Aimbot
local AimbotEnabled = false
local AimbotFOV = 100
local currentTarget = nil
local marker = nil

-- Hàm tạo chấm xanh
local function createMarker(targetPart)
    if marker then marker:Destroy() end

    marker = Instance.new("BillboardGui")
    marker.Name = "AimbotMarker"
    marker.AlwaysOnTop = true
    marker.Size = UDim2.new(0, 12, 0, 12)
    marker.Adornee = targetPart
    marker.Parent = targetPart

    local dot = Instance.new("Frame")
    dot.Size = UDim2.new(1, 0, 1, 0)
    dot.BackgroundColor3 = Color3.fromRGB(0, 255, 0)
    dot.BorderSizePixel = 0
    dot.BackgroundTransparency = 0.1
    dot.Parent = marker
end

local function removeMarker()
    if marker then
        marker:Destroy()
        marker = nil
    end
end

-- Hàm tìm đối tượng gần nhất trong FOV
local function GetNearestTarget()
    local players = game:GetService("Players")
    local localPlayer = players.LocalPlayer
    local camera = workspace.CurrentCamera
    local nearest = nil
    local shortestDistance = AimbotFOV

    for _, player in ipairs(players:GetPlayers()) do
        if player ~= localPlayer and player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
            local pos, onScreen = camera:WorldToViewportPoint(player.Character.HumanoidRootPart.Position)
            if onScreen then
                local distance = (Vector2.new(pos.X, pos.Y) - Vector2.new(camera.ViewportSize.X/2, camera.ViewportSize.Y/2)).Magnitude
                if distance < shortestDistance then
                    shortestDistance = distance
                    nearest = player
                end
            end
        end
    end

    return nearest
end

local aimbotConnection
local function enableAimbot()
    aimbotConnection = game:GetService("RunService").RenderStepped:Connect(function()
        if not AimbotEnabled then return end

        local target = GetNearestTarget()
        if target and target.Character and target.Character:FindFirstChild("HumanoidRootPart") then
            local camera = workspace.CurrentCamera
            -- Tạo một vị trí mới camera sẽ luôn hướng về mục tiêu
            local targetPosition = target.Character.HumanoidRootPart.Position
            local cameraPosition = camera.CFrame.Position
            local direction = (targetPosition - cameraPosition).unit
            -- Điều chỉnh camera để luôn nhìn vào mục tiêu mà không thay đổi góc nhìn của người chơi
            camera.CFrame = CFrame.new(cameraPosition, cameraPosition + direction)
            
            if target ~= currentTarget then
                currentTarget = target
                createMarker(target.Character.HumanoidRootPart)
            end
        else
            -- Không có mục tiêu
            if currentTarget then
                currentTarget = nil
                removeMarker()
            end
        end
    end)
end

local function disableAimbot()
    if aimbotConnection then
        aimbotConnection:Disconnect()
        aimbotConnection = nil
    end

    -- Reset camera và loại bỏ marker
    currentTarget = nil
    removeMarker()

    local cam = workspace.CurrentCamera
    if cam then
        cam.CameraType = Enum.CameraType.Custom
    end
end

PlayerTab:CreateToggle({
    Name = "Auto Aimbot",
    CurrentValue = false,
    Callback = function(Value)
        AimbotEnabled = Value
        if Value then
            enableAimbot()
        else
            disableAimbot()
        end
    end,
})

PlayerTab:CreateSlider({
    Name = "Aimbot FOV",
    Range = {20, 500},
    Increment = 10,
    Suffix = "px",
    CurrentValue = AimbotFOV,
    Callback = function(Value)
        AimbotFOV = Value
    end,
})

local UIS = game:GetService("UserInputService")
local RS = game:GetService("RunService")
local flyConnection
local velocity
local flySpeed = 50
local flying = false

local function startFlying()
    local char = game.Players.LocalPlayer.Character
    local hrp = char and char:FindFirstChild("HumanoidRootPart")
    if not hrp then return end

    velocity = Instance.new("BodyVelocity")
    velocity.MaxForce = Vector3.new(1e5, 1e5, 1e5)
    velocity.Velocity = Vector3.zero
    velocity.Parent = hrp

    flying = true

    flyConnection = RS.RenderStepped:Connect(function()
        local cam = workspace.CurrentCamera
        local moveDirection = Vector3.zero

        if UIS:IsKeyDown(Enum.KeyCode.W) then
            moveDirection += cam.CFrame.LookVector
        end
        if UIS:IsKeyDown(Enum.KeyCode.S) then
            moveDirection -= cam.CFrame.LookVector
        end
        if UIS:IsKeyDown(Enum.KeyCode.A) then
            moveDirection -= cam.CFrame.RightVector
        end
        if UIS:IsKeyDown(Enum.KeyCode.D) then
            moveDirection += cam.CFrame.RightVector
        end
        if UIS:IsKeyDown(Enum.KeyCode.Space) then
            moveDirection += Vector3.new(0, 1, 0)
        end
        if UIS:IsKeyDown(Enum.KeyCode.LeftControl) then
            moveDirection -= Vector3.new(0, 1, 0)
        end

        if moveDirection.Magnitude > 0 then
            velocity.Velocity = moveDirection.Unit * flySpeed
        else
            velocity.Velocity = Vector3.zero
        end
    end)
end

local function stopFlying()
    flying = false
    if flyConnection then flyConnection:Disconnect() end
    if velocity then velocity:Destroy() end
end

-- Toggle Fly
PlayerTab:CreateToggle({
    Name = "Fly",
    CurrentValue = false,
    Callback = function(Value)
        FlyEnabled = Value
        if Value then
            startFlying()
        else
            stopFlying()
        end
    end,
})

-- Fly Speed Slider
PlayerTab:CreateSlider({
    Name = "Fly Speed",
    Range = {10, 200},
    Increment = 5,
    Suffix = "stud/s",
    CurrentValue = flySpeed,
    Callback = function(Value)
        flySpeed = Value
        if flying then
            bodyVelocity.Velocity = Vector3.new(0, FlySpeed, 0)
        end
    end,
})

local ESPEnabled = false
local ESPObjects = {}

function createESP(player)
    if player == game.Players.LocalPlayer then return end
    local character = player.Character
    if not character then return end

    local box = Instance.new("BoxHandleAdornment")
    box.Name = "ESPBox"
    box.Size = Vector3.new(2, 5, 1)
    box.Color3 = Color3.fromRGB(0, 255, 0)
    box.Transparency = 0.5
    box.Adornee = character:FindFirstChild("HumanoidRootPart")
    box.AlwaysOnTop = true
    box.ZIndex = 5
    box.Parent = character

    local nameTag = Instance.new("BillboardGui")
    nameTag.Name = "ESPName"
    nameTag.Size = UDim2.new(0, 100, 0, 40)
    nameTag.StudsOffset = Vector3.new(0, 3, 0)
    nameTag.Adornee = character:FindFirstChild("Head")
    nameTag.AlwaysOnTop = true
    nameTag.Parent = character

    local nameLabel = Instance.new("TextLabel")
    nameLabel.Size = UDim2.new(1, 0, 1, 0)
    nameLabel.BackgroundTransparency = 1
    nameLabel.Text = player.Name
    nameLabel.TextColor3 = Color3.new(1, 1, 1)
    nameLabel.TextScaled = true
    nameLabel.Font = Enum.Font.SourceSansBold
    nameLabel.Parent = nameTag

    ESPObjects[player] = {box, nameTag}
end

function removeESP(player)
    if ESPObjects[player] then
        for _, v in pairs(ESPObjects[player]) do
            if v then v:Destroy() end
        end
        ESPObjects[player] = nil
    end
end

function updateESP()
    for _, player in pairs(game.Players:GetPlayers()) do
        if ESPEnabled then
            if player.Character and not ESPObjects[player] then
                createESP(player)
            end
        else
            removeESP(player)
        end
    end
end

-- Toggle ESP
PlayerTab:CreateToggle({
    Name = "Bật/Tắt ESP",
    CurrentValue = false,
    Callback = function(Value)
        ESPEnabled = Value
        updateESP()
    end,
})

-- Theo dõi người chơi mới
game.Players.PlayerAdded:Connect(function(player)
    player.CharacterAdded:Connect(function()
        wait(1)
        if ESPEnabled then
            createESP(player)
        end
    end)
end)

-- Xoá ESP khi người chơi rời
game.Players.PlayerRemoving:Connect(function(player)
    removeESP(player)
end)
