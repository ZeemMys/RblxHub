local Rayfield = loadstring(game:HttpGet('https://sirius.menu/rayfield'))()

local Window = Rayfield:CreateWindow({
    Name = "Duckian",
    Icon = 0, -- Icon in Topbar. Can use Lucide Icons (string) or Roblox Image (number). 0 to use no icon (default).
    LoadingTitle = "Wait a minute, the script is loading",
    LoadingSubtitle = "by DucMagic$",
    Theme = "Amethyst", -- Check https://docs.sirius.menu/rayfield/configuration/themes
 
    DisableRayfieldPrompts = false,
    DisableBuildWarnings = false, -- Prevents Rayfield from warning when the script has a version mismatch with the interface
 
    ConfigurationSaving = {
       Enabled = true,
       FolderName = Duckian, -- Create a custom folder for your hub/game
       FileName = "Duckian Hub"
    },
 
    Discord = {
       Enabled = true, -- Prompt the user to join your Discord server if their executor supports it
       Invite = "https://discord.gg/PnHj485p", -- The Discord invite code, do not include discord.gg/. E.g. discord.gg/ ABCD would be ABCD
       RememberJoins = true -- Set this to false to make them join the discord every time they load it up
    },
 
    KeySystem = true, -- Set this to true to use our key system
    KeySettings = {
       Title = "Go Ask Him",
       Subtitle = "Key System",
       Note = "IDK", -- Use this to tell the user how to get a key
       FileName = "Key", -- It is recommended to use something unique as other scripts using Rayfield may overwrite your key file
       SaveKey = true, -- The user's key will be saved, but if you change the key, they will be unable to use your script
       GrabKeyFromSite = false, -- If this is true, set Key below to the RAW site you would like Rayfield to get the key from
       Key = {"20/05/2009"} -- List of keys that will be accepted by the system, can be RAW file links (pastebin, github etc) or simple strings ("hello","key22")
    }
 })

local Tab = Window:CreateTab("Main", 4483362458) -- Title, Image

Tab:CreateButton({
    Name = "Click me!",
    Callback = function()
        print("Hello from Rayfield!")
    end
})

local PlayerTab = Window:CreateTab("Player", 4483362458) -- Title, Image

local Slider = PlayerTab:CreateSlider({
    Name = "WalkSpeed",
    Range = {16, 100},
    Increment = 1,
    Suffix = "Speed",
    CurrentValue = 16,
    Flag = "Slider1", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
    Callback = function(Value)
        local player = game.Players.LocalPlayer
        local character = player.Character or player.CharacterAdded:Wait()
        local humanoid = character:FindFirstChildOfClass("Humanoid")
        if humanoid then
           humanoid.WalkSpeed = Value
        end
    end
 })

 local Slider = PlayerTab:CreateSlider({
    Name = "Jump Height",
    Range = {50, 500},
    Increment = 1,
    Suffix = "Height",
    CurrentValue = 10,
    Flag = "Slider3", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
    Callback = function(Value)
     game.Players.LocalPlayer.Character.Humanoid.JumpPower = Value
    end,
 })

 local Dropdown = Tab:CreateDropdown({
    Name = "Select Area",
    Options = {"Summon","Play","Raid","Boss Rush","Challenge"},
    CurrentOption = {"Summon"},
    MultipleOptions = false,
    Flag = "DropDown1", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
    Callback = function(Options)
        local Dropdown = Tab:CreateDropdown({
            Name = "Select Area",
            Options = {"Summon", "Play", "Raid", "Boss Rush", "Challenge"},
            CurrentOption = {"Summon"},
            MultipleOptions = false,
            Flag = "DropDown1",
            Callback = function(Options)
                local selected = Options[1]
                local teleportTable = {
                    ["Summon"] = workspace:FindFirstChild("Summon"),
                    ["Play"] = workspace:FindFirstChild("Play"),
                    ["Raid"] = workspace:FindFirstChild("Raid"),
                    ["Boss Rush"] = workspace:FindFirstChild("BossRush"),
                    ["Challenge"] = workspace:FindFirstChild("Challenge")
                }
        
                local destination = teleportTable[selected]
                if destination and destination:IsA("BasePart") then
                    game.Players.LocalPlayer.Character:MoveTo(destination.Position)
                else
                    warn("Không tìm thấy vị trí cho: " .. selected)
                end
            end,
        })
        
    -- The function that takes place when the selected option is changed
    -- The variable (Options) is a table of strings for the current selected options
    end,
 })

local Tab = Window:CreateTab("Credit", 4483362458)
local Button = Tab:CreateButton({
   Name = "Click To See What Happen:)",
   Callback = function()
       print("Thanks For Using Duckian Hub!")
   -- The function that takes place when the button is pressed
   end,
})

local PlayerTab = Window:CreateTab("Player", 4483362458) -- Title, Image

-- Thêm Fly Hack vào tab Player
local Toggle = PlayerTab:CreateToggle({
    Name = "Fly Hack",
    CurrentValue = false,
    Flag = "FlyToggle",
    Callback = function(Value)
        local player = game.Players.LocalPlayer
        local character = player.Character or player.CharacterAdded:Wait()
        local humanoid = character:WaitForChild("Humanoid")
        local rootPart = character:WaitForChild("HumanoidRootPart")
        
        if Value then
            -- Bật chế độ bay
            local flySpeed = 50
            local bg = Instance.new("BodyGyro", rootPart)
            bg.MaxTorque = Vector3.new(math.huge, math.huge, math.huge)
            bg.P = 10000
            
            local bv = Instance.new("BodyVelocity", rootPart)
            bv.MaxForce = Vector3.new(math.huge, math.huge, math.huge)
            bv.Velocity = Vector3.new(0, 0, 0)
            
            humanoid.PlatformStand = true
            
            -- Kết nối sự kiện nhấn phím
            local flyConnection
            flyConnection = game:GetService("UserInputService").InputBegan:Connect(function(input, gameProcessed)
                if gameProcessed then return end
                
                local direction = Vector3.new(0, 0, 0)
                
                if input.KeyCode == Enum.KeyCode.W then
                    direction = direction + rootPart.CFrame.LookVector
                elseif input.KeyCode == Enum.KeyCode.S then
                    direction = direction - rootPart.CFrame.LookVector
                elseif input.KeyCode == Enum.KeyCode.A then
                    direction = direction - rootPart.CFrame.RightVector
                elseif input.KeyCode == Enum.KeyCode.D then
                    direction = direction + rootPart.CFrame.RightVector
                elseif input.KeyCode == Enum.KeyCode.Space then
                    direction = direction + Vector3.new(0, 1, 0)
                elseif input.KeyCode == Enum.KeyCode.LeftShift then
                    direction = direction + Vector3.new(0, -1, 0)
                end
                
                bv.Velocity = direction * flySpeed
            end)
            
            -- Lưu trữ các biến để có thể hủy sau
            _G.FlyAssets = {
                BodyGyro = bg,
                BodyVelocity = bv,
                Connection = flyConnection
            }
        else
            -- Tắt chế độ bay
            humanoid.PlatformStand = false
            if _G.FlyAssets then
                if _G.FlyAssets.BodyGyro then _G.FlyAssets.BodyGyro:Destroy() end
                if _G.FlyAssets.BodyVelocity then _G.FlyAssets.BodyVelocity:Destroy() end
                if _G.FlyAssets.Connection then _G.FlyAssets.Connection:Disconnect() end
                _G.FlyAssets = nil
            end
        end
    end,
})

-- Thêm Slider tốc độ bay
local Slider = PlayerTab:CreateSlider({
    Name = "Fly Speed",
    Range = {20, 200},
    Increment = 5,
    Suffix = "Speed",
    CurrentValue = 50,
    Flag = "FlySpeedSlider",
    Callback = function(Value)
        _G.FlySpeed = Value
    end,
})
